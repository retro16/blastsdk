Example of file generated by blsgen to enable binary loading :

Binaries (platform game) :

  * main
   * main.c (.text : addr=$200, physaddr=$200, size=$80)
  * loader
   * blsloader.asm (addr=$280, size=$80)
  * character
   * character.c (.text : addr=$300, physaddr=$300, size=$80 ; .data : addr=$FF1000, physaddr=$380, size=$80 ; .bss : addr=$FF1080, size=$80)
   * character.png (chip=vram, addr=$0, physaddr=$500, size=$100)
   * physics_rom.asm (code run from ROM, addr=$400, physaddr=$400, size=$100)
  * level1
   * level1.c (.text : addr=$600, physaddr=$600, size=$80 ; .data : addr=$FF2000, physaddr=$680, size=$80)
   * level1.png (chip=vram, addr=$100, physaddr=$700, size=$100)

blsload.h

#define blsload_main() {} // No load since target chip == physical medium chip
#define blsload_loader() {}
#define blsload_character() { \
  blsload_cart_mram_raw($FF1000, $380, $80); \
  blsload_cart_vram_raw($0, $500, $100); \
}
#define blsload_level1() { \
  blsload_cart_mram_raw($FF2000, $680, $80); \
  blsload_cart_vram_lzo($100, $700, $100); \
}


blsload.asm

blsload_main	macro
		endm

blsload_loader	macro
		endm

blsload_character	macro
		move.l	#$80, -(sp)
		move.l	#$380, -(sp)
		move.l	#$FF1000, -(sp)
		jsr	blsload_cart_mram_raw
		move.l	#$80, -(sp)
		move.l	#$680, -(sp)
		move.l	#$FF2000, -(sp)
		jsr	blsload_cart_vram_raw
		lea	24(sp), sp
		endm
